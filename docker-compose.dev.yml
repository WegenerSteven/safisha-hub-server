version: '3.8'
services:
# SafariHub Application
  safishahub:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: safishahub-dev
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgres://safishahub_user:dev_password@postgres:5432/safishahub_dev
      REDIS_URL: redis://redis:6379
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis


  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: safishahub-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: safishahub_dev
      POSTGRES_USER: safishahub_user
      POSTGRES_PASSWORD: dev_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
     - pgdata:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5


  # Redis Cache
  redis:
    image: redis:8.0-alpine
    container_name: safishahub-redis-dev
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-dev_password}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD:-dev_password}"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-dev_password}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  pgdata:
    name: safishahub_pgdata
    driver: local
  redis_data:
    name: safishahub_redis_data
    driver: local

networks:
  app-network:
    driver: bridge